@{
    ViewData["Title"] = "Admin Panel - Yönetim Ekranı";
}

<div class="container-fluid">
    <div class="row">

        <!-- SOL MENÜ -->
        <div class="col-md-3 bg-light vh-100 shadow-sm">
            <h4 class="mt-4 text-center text-success">Admin Panel</h4>
            <ul class="list-group list-group-flush mt-4">
                <li class="list-group-item list-group-item-action" onclick="loadComponent('Odalar')">🛏️ Oda Yönetimi</li>
                <li class="list-group-item list-group-item-action" onclick="loadComponent('Personel')">👤 Personel Yönetimi</li>
                <li class="list-group-item list-group-item-action" onclick="loadComponent('EkPaketler')">📦 Ek Paketler</li>
                <li class="list-group-item list-group-item-action" onclick="loadComponent('Faturalar')">🧾 Faturalar</li>
                <li class="list-group-item list-group-item-action" onclick="loadComponent('Raporlar')">📊 Raporlar</li>
            </ul>

            <!-- Çıkış Butonu -->
            <form asp-controller="Auth" asp-action="Cikis" method="post" class="mt-4 text-center">
                @Html.AntiForgeryToken()
                <button type="submit" class="btn btn-outline-danger">Çıkış Yap</button>
            </form>
        </div>

        <!-- SAĞ PANEL -->
        <div class="col-md-9 p-4" id="panelContent">
            <h5 class="text-muted">Hoş geldin Admin</h5>
            <p>Sol menüden bir bölüm seçerek işlem yapmaya başlayabilirsin.</p>
        </div>

    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script>
        function loadComponent(componentName) {
            $.ajax({
                url: `/ViewComponent/${componentName}`,
                type: 'GET',
                success: function (html) {
                    $("#panelContent").html(html);

                    if (componentName === "Personel") {
                        setTimeout(bindPersonelEvents, 100);
                    }
                },
                error: function () {
                    $("#panelContent").html("<div class='alert alert-danger'>İçerik yüklenirken hata oluştu.</div>");
                }
            });
        }

        function bindPersonelEvents() {
            try {
                window.personeller = JSON.parse($("#personel-data").val());
            } catch (err) {
                console.error("Personel verisi alınamadı:", err);
                window.personeller = [];
            }

            // Ekle / Güncelle
            $("#kayitForm").submit(function (e) {
                e.preventDefault();
                const form = new FormData(this);
                const id = form.get("PersonelId");

                const url = id && id !== "0"
                    ? "/AdminPanel/PersonelGuncelle"
                    : "/AdminPanel/PersonelKayit";

                $.ajax({
                    url: url,
                    type: "POST",
                    data: form,
                    contentType: false,
                    processData: false,
                    success: () => {
                        loadComponent("Personel");
                        $("#kaydetBtn").text("Kaydet");
                        $("#kayitForm")[0].reset();
                        $("input[name='PersonelId']").val(0);
                        $("input[name='KullaniciId']").val("");
                        $("#sifreInput").attr("required", "required"); 
                    },
                    error: (xhr) => alert("Hata: " + xhr.responseText)
                });
            });

            //  Silme işlemi
            $(".sil-btn").click(function () {
                const id = $(this).data("id");
                if (!confirm("Bu personeli silmek istediğinize emin misiniz?")) return;

                $.post("/AdminPanel/PersonelSil", { id })
                    .done(() => loadComponent('Personel'))
                    .fail(() => alert("Personel silinemedi."));
            });

            //  Düzenleme işlemi
            $(".duzenle-btn").click(function () {
                const id = parseInt($(this).data("id"));
                const p = personeller.find(x => x.PersonelId === id);

                if (!p) {
                    alert("Kayıt bulunamadı!");
                    return;
                $("input[name='KullaniciId']").val(p.KullaniciId || "");

                $("input[name='PersonelId']").val(p.PersonelId);
                $("input[name='KullaniciId']").val(p.KullaniciId || "");
                $("input[name='Ad']").val(p.Ad);
                $("input[name='Soyad']").val(p.Soyad);
                $("input[name='Email']").val(p.Email);
                $("input[name='Telefon']").val(p.Telefon);

                $("#kaydetBtn").text("Güncelle");

                // GÜNCELLEME ise: şifre alanı zorunlu olmasın
                $("#sifreInput").removeAttr("required");

                // GÜNCELLEME ise: şifre alanı zorunlu olmasın
                $("#sifreInput").removeAttr("required");
            });
        }
    </script>
}
