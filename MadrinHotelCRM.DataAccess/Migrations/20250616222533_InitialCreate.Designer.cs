// <auto-generated />
using System;
using MadrinHotelCRM.DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MadrinHotelCRM.DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250616222533_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MadrinHotelCRM.Entities.Models.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("MadrinHotelCRM.Entities.Models.Departman", b =>
                {
                    b.Property<int>("DepartmanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmanId"));

                    b.Property<string>("DepartmanAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("DepartmanId");

                    b.ToTable("Departmanlar");
                });

            modelBuilder.Entity("MadrinHotelCRM.Entities.Models.EkPaket", b =>
                {
                    b.Property<int>("EkPaketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EkPaketId"));

                    b.Property<decimal>("Fiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaketAciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaketAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("EkPaketId");

                    b.ToTable("EkPaketler");

                    b.HasData(
                        new
                        {
                            EkPaketId = 1,
                            Fiyat = 750.00m,
                            OlusturmaTarihi = new DateTime(2025, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaketAciklama = "Misafirlerimize özel 1 saatlik spa ve masaj hizmeti.",
                            PaketAdi = "Spa ve Masaj Paketi"
                        },
                        new
                        {
                            EkPaketId = 2,
                            Fiyat = 1200.00m,
                            OlusturmaTarihi = new DateTime(2025, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaketAciklama = "Geliş ve dönüş için VIP transfer hizmeti.",
                            PaketAdi = "Havalimanı Transferi"
                        },
                        new
                        {
                            EkPaketId = 3,
                            Fiyat = 950.00m,
                            OlusturmaTarihi = new DateTime(2025, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaketAciklama = "Deniz manzaralı restoranda 2 kişilik özel akşam yemeği.",
                            PaketAdi = "Romantik Akşam Yemeği"
                        },
                        new
                        {
                            EkPaketId = 4,
                            Fiyat = 300.00m,
                            OlusturmaTarihi = new DateTime(2025, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaketAciklama = "Eğitimli personel tarafından saatlik çocuk bakımı.",
                            PaketAdi = "Çocuk Bakımı Hizmeti"
                        },
                        new
                        {
                            EkPaketId = 5,
                            Fiyat = 1800.00m,
                            OlusturmaTarihi = new DateTime(2025, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaketAciklama = "Bodrum koylarını keşfedeceğiniz 4 saatlik tekne turu.",
                            PaketAdi = "Yarım Gün Tekne Turu"
                        });
                });

            modelBuilder.Entity("MadrinHotelCRM.Entities.Models.Etiket", b =>
                {
                    b.Property<int>("EtiketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EtiketId"));

                    b.Property<string>("EtiketAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EtiketId");

                    b.ToTable("Etiketler");
                });

            modelBuilder.Entity("MadrinHotelCRM.Entities.Models.Fatura", b =>
                {
                    b.Property<int>("FaturaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FaturaId"));

                    b.Property<int>("Durum")
                        .HasColumnType("int");

                    b.Property<DateTime>("FaturaOlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("RezervasyonId")
                        .HasColumnType("int");

                    b.Property<decimal>("ToplamTutar")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("FaturaId");

                    b.HasIndex("RezervasyonId");

                    b.ToTable("Faturalar");
                });

            modelBuilder.Entity("MadrinHotelCRM.Entities.Models.GenelTakip", b =>
                {
                    b.Property<int>("GenelTakipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenelTakipId"));

                    b.Property<DateTime>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("EskiVeriJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IslemTipi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KayitId")
                        .HasColumnType("int");

                    b.Property<int>("PersonelId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SilinmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("TabloAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("YaratilmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("YeniVeriJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenelTakipId");

                    b.HasIndex("PersonelId");

                    b.ToTable("GenelTakipler");
                });

            modelBuilder.Entity("MadrinHotelCRM.Entities.Models.GeriBildirim", b =>
                {
                    b.Property<int>("GeriBildirimId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GeriBildirimId"));

                    b.Property<bool>("Durum")
                        .HasColumnType("bit");

                    b.Property<string>("Konu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mesaj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MusteriId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.HasKey("GeriBildirimId");

                    b.HasIndex("MusteriId");

                    b.ToTable("GeriBildirimler");
                });

            modelBuilder.Entity("MadrinHotelCRM.Entities.Models.Musteri", b =>
                {
                    b.Property<int>("MusteriId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MusteriId"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Cinsiyet")
                        .HasColumnType("int");

                    b.Property<DateTime>("DogumTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasaportNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TcNo")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("TelNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("YabanciUyrukluMu")
                        .HasColumnType("bit");

                    b.HasKey("MusteriId");

                    b.ToTable("Musteriler");
                });

            modelBuilder.Entity("MadrinHotelCRM.Entities.Models.MusteriEtiket", b =>
                {
                    b.Property<int>("MusteriID")
                        .HasColumnType("int");

                    b.Property<int>("EtiketID")
                        .HasColumnType("int");

                    b.HasKey("MusteriID", "EtiketID");

                    b.HasIndex("EtiketID");

                    b.ToTable("MusteriEtiketler");
                });

            modelBuilder.Entity("MadrinHotelCRM.Entities.Models.MusteriEtkilesim", b =>
                {
                    b.Property<int>("MusteriEtkilesimId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EtkilesimTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("Kanal")
                        .HasColumnType("int");

                    b.Property<int>("MusteriID")
                        .HasColumnType("int");

                    b.Property<string>("Notlar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonelId")
                        .HasColumnType("int");

                    b.HasKey("MusteriEtkilesimId");

                    b.HasIndex("PersonelId");

                    b.ToTable("MusteriEtkilesimler");
                });

            modelBuilder.Entity("MadrinHotelCRM.Entities.Models.MusteriRezervasyon", b =>
                {
                    b.Property<int>("MusteriId")
                        .HasColumnType("int");

                    b.Property<int>("RezervasyonId")
                        .HasColumnType("int");

                    b.Property<bool>("GirisYaptiMi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("PersonelId")
                        .HasColumnType("int");

                    b.HasKey("MusteriId", "RezervasyonId");

                    b.HasIndex("PersonelId");

                    b.HasIndex("RezervasyonId");

                    b.ToTable("MusteriRezervasyonlar");
                });

            modelBuilder.Entity("MadrinHotelCRM.Entities.Models.Oda", b =>
                {
                    b.Property<int>("OdaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OdaId"));

                    b.Property<int>("Durum")
                        .HasColumnType("int");

                    b.Property<string>("FotografGaleriListesiJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GorselUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OdaAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OdaBoyutu")
                        .HasColumnType("int");

                    b.Property<string>("OdaNumarasi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OdaTipiId")
                        .HasColumnType("int");

                    b.Property<string>("Ozellikler")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("YatakSayisi")
                        .HasColumnType("int");

                    b.HasKey("OdaId");

                    b.HasIndex("OdaTipiId");

                    b.ToTable("Odalar");

                    b.HasData(
                        new
                        {
                            OdaId = 1,
                            Durum = 1,
                            OdaNumarasi = "101",
                            OdaTipiId = 1
                        },
                        new
                        {
                            OdaId = 2,
                            Durum = 2,
                            OdaNumarasi = "102",
                            OdaTipiId = 2
                        },
                        new
                        {
                            OdaId = 3,
                            Durum = 4,
                            OdaNumarasi = "201",
                            OdaTipiId = 3
                        },
                        new
                        {
                            OdaId = 4,
                            Durum = 5,
                            OdaNumarasi = "301",
                            OdaTipiId = 4
                        },
                        new
                        {
                            OdaId = 5,
                            Durum = 1,
                            OdaNumarasi = "401",
                            OdaTipiId = 5
                        });
                });

            modelBuilder.Entity("MadrinHotelCRM.Entities.Models.OdaTarife", b =>
                {
                    b.Property<int>("OdaId")
                        .HasColumnType("int");

                    b.Property<int>("TarifeId")
                        .HasColumnType("int");

                    b.HasKey("OdaId", "TarifeId");

                    b.HasIndex("TarifeId");

                    b.ToTable("OdaTarifeleri");
                });

            modelBuilder.Entity("MadrinHotelCRM.Entities.Models.OdaTipi", b =>
                {
                    b.Property<int>("OdaTipiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OdaTipiId"));

                    b.Property<decimal>("Fiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Kapasite")
                        .HasColumnType("int");

                    b.Property<string>("OdaAciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OdaTurAd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OdaTipiId");

                    b.ToTable("OdaTipleri");

                    b.HasData(
                        new
                        {
                            OdaTipiId = 1,
                            Fiyat = 1200.00m,
                            Kapasite = 1,
                            OdaAciklama = "Konforlu tek kişilik yatak, şehir manzaralı, mini bar ve ücretsiz Wi-Fi.",
                            OdaTurAd = "Standart Tek Kişilik"
                        },
                        new
                        {
                            OdaTipiId = 2,
                            Fiyat = 1800.00m,
                            Kapasite = 2,
                            OdaAciklama = "Geniş çift kişilik yatak, klima, balkon ve televizyon.",
                            OdaTurAd = "Standart Çift Kişilik"
                        },
                        new
                        {
                            OdaTipiId = 3,
                            Fiyat = 2500.00m,
                            Kapasite = 2,
                            OdaAciklama = "Deniz manzaralı, king size yatak, özel jakuzi, kahve makinesi.",
                            OdaTurAd = "Deluxe Oda"
                        },
                        new
                        {
                            OdaTipiId = 4,
                            Fiyat = 3200.00m,
                            Kapasite = 4,
                            OdaAciklama = "İki ayrı oda, geniş salon, çocuk yatağı, mutfak bölümü.",
                            OdaTurAd = "Aile Odası"
                        },
                        new
                        {
                            OdaTipiId = 5,
                            Fiyat = 4000.00m,
                            Kapasite = 2,
                            OdaAciklama = "Romantik dekorasyon, jakuzili banyo, özel teras, sürpriz ikramlar.",
                            OdaTurAd = "Balayı Süiti"
                        });
                });

            modelBuilder.Entity("MadrinHotelCRM.Entities.Models.Odeme", b =>
                {
                    b.Property<int>("OdemeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OdemeId"));

                    b.Property<int>("FaturaId")
                        .HasColumnType("int");

                    b.Property<int>("IslemId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OdemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("OdemeYontemi")
                        .HasColumnType("int");

                    b.Property<decimal>("ToplamTutar")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OdemeId");

                    b.HasIndex("FaturaId");

                    b.ToTable("Odemeler");
                });

            modelBuilder.Entity("MadrinHotelCRM.Entities.Models.Personel", b =>
                {
                    b.Property<int>("PersonelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonelId"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DepartmanId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KullaniciId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PasaportNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TcKimlik")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("YabanciUyrukluMu")
                        .HasColumnType("bit");

                    b.HasKey("PersonelId");

                    b.HasIndex("DepartmanId");

                    b.ToTable("Personeller");
                });

            modelBuilder.Entity("MadrinHotelCRM.Entities.Models.PersonelRezervasyon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CheckInTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CheckOutTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("Durum")
                        .HasColumnType("int");

                    b.Property<string>("Notlar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonelId")
                        .HasColumnType("int");

                    b.Property<int>("RezervasyonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonelId");

                    b.HasIndex("RezervasyonId");

                    b.ToTable("PersonelRezervasyon");
                });

            modelBuilder.Entity("MadrinHotelCRM.Entities.Models.Rezervasyon", b =>
                {
                    b.Property<int>("RezervasyonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RezervasyonId"));

                    b.Property<DateTime>("BaslangicTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("BitisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("Durum")
                        .HasColumnType("int");

                    b.Property<string>("IptalNedeni")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("IptalTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("MusteriId")
                        .HasColumnType("int");

                    b.Property<int>("OdaTipiId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("TarifeId")
                        .HasColumnType("int");

                    b.HasKey("RezervasyonId");

                    b.HasIndex("MusteriId");

                    b.HasIndex("OdaTipiId");

                    b.HasIndex("TarifeId");

                    b.ToTable("Rezervasyonlar");
                });

            modelBuilder.Entity("MadrinHotelCRM.Entities.Models.RezervasyonPaket", b =>
                {
                    b.Property<int>("RezervasyonId")
                        .HasColumnType("int");

                    b.Property<int>("PaketId")
                        .HasColumnType("int");

                    b.Property<int>("Adet")
                        .HasColumnType("int");

                    b.HasKey("RezervasyonId", "PaketId");

                    b.HasIndex("PaketId");

                    b.ToTable("RezervasyonPaketler");
                });

            modelBuilder.Entity("MadrinHotelCRM.Entities.Models.SistemLog", b =>
                {
                    b.Property<int>("SistemLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SistemLogId"));

                    b.Property<string>("HttpYontemi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Istisna")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kaynak")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogJsonVerisi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LogSeviyesi")
                        .HasColumnType("int");

                    b.Property<string>("Mesaj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ZamanDamgasi")
                        .HasColumnType("datetime2");

                    b.HasKey("SistemLogId");

                    b.ToTable("SistemLoglar");
                });

            modelBuilder.Entity("MadrinHotelCRM.Entities.Models.Tarife", b =>
                {
                    b.Property<int>("TarifeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TarifeId"));

                    b.Property<DateTime>("BaslangicTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("BitisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Fiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("IndirimOrani")
                        .HasColumnType("int");

                    b.Property<string>("TarifeAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TarifeId");

                    b.ToTable("Tarifeler");

                    b.HasData(
                        new
                        {
                            TarifeId = 1,
                            BaslangicTarihi = new DateTime(2025, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BitisTarihi = new DateTime(2025, 8, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fiyat = 2800.00m,
                            IndirimOrani = 0,
                            TarifeAdi = "Yaz Sezonu Standart Tarife"
                        },
                        new
                        {
                            TarifeId = 2,
                            BaslangicTarihi = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BitisTarihi = new DateTime(2025, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fiyat = 1800.00m,
                            IndirimOrani = 20,
                            TarifeAdi = "Kış Kampanyası"
                        },
                        new
                        {
                            TarifeId = 3,
                            BaslangicTarihi = new DateTime(2025, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BitisTarihi = new DateTime(2025, 2, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fiyat = 2200.00m,
                            IndirimOrani = 15,
                            TarifeAdi = "Sevgililer Günü Paketi"
                        },
                        new
                        {
                            TarifeId = 4,
                            BaslangicTarihi = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BitisTarihi = new DateTime(2025, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fiyat = 3200.00m,
                            IndirimOrani = 10,
                            TarifeAdi = "Bayram Özel Tarife"
                        },
                        new
                        {
                            TarifeId = 5,
                            BaslangicTarihi = new DateTime(2025, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BitisTarihi = new DateTime(2025, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fiyat = 2000.00m,
                            IndirimOrani = 25,
                            TarifeAdi = "Sonbahar Erken Rezervasyon"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<string>", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "2",
                            Name = "Personel",
                            NormalizedName = "PERSONEL"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("MadrinHotelCRM.Entities.Models.Fatura", b =>
                {
                    b.HasOne("MadrinHotelCRM.Entities.Models.Rezervasyon", "Rezervasyon")
                        .WithMany("Faturalar")
                        .HasForeignKey("RezervasyonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Rezervasyon");
                });

            modelBuilder.Entity("MadrinHotelCRM.Entities.Models.GenelTakip", b =>
                {
                    b.HasOne("MadrinHotelCRM.Entities.Models.Personel", "Personel")
                        .WithMany("GenelTakipler")
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("MadrinHotelCRM.Entities.Models.GeriBildirim", b =>
                {
                    b.HasOne("MadrinHotelCRM.Entities.Models.Musteri", "Musteri")
                        .WithMany("GeriBildirimler")
                        .HasForeignKey("MusteriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Musteri");
                });

            modelBuilder.Entity("MadrinHotelCRM.Entities.Models.MusteriEtiket", b =>
                {
                    b.HasOne("MadrinHotelCRM.Entities.Models.Etiket", "Etiket")
                        .WithMany("MusteriEtiketleri")
                        .HasForeignKey("EtiketID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MadrinHotelCRM.Entities.Models.Musteri", "Musteri")
                        .WithMany("MusteriEtiketleri")
                        .HasForeignKey("MusteriID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Etiket");

                    b.Navigation("Musteri");
                });

            modelBuilder.Entity("MadrinHotelCRM.Entities.Models.MusteriEtkilesim", b =>
                {
                    b.HasOne("MadrinHotelCRM.Entities.Models.Musteri", "Musteriler")
                        .WithMany("MusteriEtkilesim")
                        .HasForeignKey("MusteriEtkilesimId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("MadrinHotelCRM.Entities.Models.Personel", "Personeller")
                        .WithMany("Etkilesimler")
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Musteriler");

                    b.Navigation("Personeller");
                });

            modelBuilder.Entity("MadrinHotelCRM.Entities.Models.MusteriRezervasyon", b =>
                {
                    b.HasOne("MadrinHotelCRM.Entities.Models.Musteri", "Musteri")
                        .WithMany()
                        .HasForeignKey("MusteriId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MadrinHotelCRM.Entities.Models.Personel", "Personel")
                        .WithMany()
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MadrinHotelCRM.Entities.Models.Rezervasyon", "Rezervasyon")
                        .WithMany()
                        .HasForeignKey("RezervasyonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Musteri");

                    b.Navigation("Personel");

                    b.Navigation("Rezervasyon");
                });

            modelBuilder.Entity("MadrinHotelCRM.Entities.Models.Oda", b =>
                {
                    b.HasOne("MadrinHotelCRM.Entities.Models.OdaTipi", "OdaTipi")
                        .WithMany("Odalar")
                        .HasForeignKey("OdaTipiId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("OdaTipi");
                });

            modelBuilder.Entity("MadrinHotelCRM.Entities.Models.OdaTarife", b =>
                {
                    b.HasOne("MadrinHotelCRM.Entities.Models.Oda", "Oda")
                        .WithMany("OdaTarifeleri")
                        .HasForeignKey("OdaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MadrinHotelCRM.Entities.Models.Tarife", "Tarife")
                        .WithMany("OdaTarifeleri")
                        .HasForeignKey("TarifeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Oda");

                    b.Navigation("Tarife");
                });

            modelBuilder.Entity("MadrinHotelCRM.Entities.Models.Odeme", b =>
                {
                    b.HasOne("MadrinHotelCRM.Entities.Models.Fatura", "Fatura")
                        .WithMany("Odemeler")
                        .HasForeignKey("FaturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fatura");
                });

            modelBuilder.Entity("MadrinHotelCRM.Entities.Models.Personel", b =>
                {
                    b.HasOne("MadrinHotelCRM.Entities.Models.Departman", "Departman")
                        .WithMany("Personeller")
                        .HasForeignKey("DepartmanId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Departman");
                });

            modelBuilder.Entity("MadrinHotelCRM.Entities.Models.PersonelRezervasyon", b =>
                {
                    b.HasOne("MadrinHotelCRM.Entities.Models.Personel", "Personel")
                        .WithMany("PersonelRezervasyonlar")
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MadrinHotelCRM.Entities.Models.Rezervasyon", "Rezervasyon")
                        .WithMany("PersonelRezervasyonlar")
                        .HasForeignKey("RezervasyonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personel");

                    b.Navigation("Rezervasyon");
                });

            modelBuilder.Entity("MadrinHotelCRM.Entities.Models.Rezervasyon", b =>
                {
                    b.HasOne("MadrinHotelCRM.Entities.Models.Musteri", "Musteri")
                        .WithMany("Rezervasyonlar")
                        .HasForeignKey("MusteriId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MadrinHotelCRM.Entities.Models.OdaTipi", "OdaTipi")
                        .WithMany()
                        .HasForeignKey("OdaTipiId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MadrinHotelCRM.Entities.Models.Tarife", "Tarife")
                        .WithMany()
                        .HasForeignKey("TarifeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Musteri");

                    b.Navigation("OdaTipi");

                    b.Navigation("Tarife");
                });

            modelBuilder.Entity("MadrinHotelCRM.Entities.Models.RezervasyonPaket", b =>
                {
                    b.HasOne("MadrinHotelCRM.Entities.Models.EkPaket", "Paket")
                        .WithMany("RezervasyonPaketler")
                        .HasForeignKey("PaketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MadrinHotelCRM.Entities.Models.Rezervasyon", "Rezervasyon")
                        .WithMany("RezervasyonPaketler")
                        .HasForeignKey("RezervasyonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paket");

                    b.Navigation("Rezervasyon");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<string>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("MadrinHotelCRM.Entities.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("MadrinHotelCRM.Entities.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<string>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MadrinHotelCRM.Entities.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("MadrinHotelCRM.Entities.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MadrinHotelCRM.Entities.Models.Departman", b =>
                {
                    b.Navigation("Personeller");
                });

            modelBuilder.Entity("MadrinHotelCRM.Entities.Models.EkPaket", b =>
                {
                    b.Navigation("RezervasyonPaketler");
                });

            modelBuilder.Entity("MadrinHotelCRM.Entities.Models.Etiket", b =>
                {
                    b.Navigation("MusteriEtiketleri");
                });

            modelBuilder.Entity("MadrinHotelCRM.Entities.Models.Fatura", b =>
                {
                    b.Navigation("Odemeler");
                });

            modelBuilder.Entity("MadrinHotelCRM.Entities.Models.Musteri", b =>
                {
                    b.Navigation("GeriBildirimler");

                    b.Navigation("MusteriEtiketleri");

                    b.Navigation("MusteriEtkilesim");

                    b.Navigation("Rezervasyonlar");
                });

            modelBuilder.Entity("MadrinHotelCRM.Entities.Models.Oda", b =>
                {
                    b.Navigation("OdaTarifeleri");
                });

            modelBuilder.Entity("MadrinHotelCRM.Entities.Models.OdaTipi", b =>
                {
                    b.Navigation("Odalar");
                });

            modelBuilder.Entity("MadrinHotelCRM.Entities.Models.Personel", b =>
                {
                    b.Navigation("Etkilesimler");

                    b.Navigation("GenelTakipler");

                    b.Navigation("PersonelRezervasyonlar");
                });

            modelBuilder.Entity("MadrinHotelCRM.Entities.Models.Rezervasyon", b =>
                {
                    b.Navigation("Faturalar");

                    b.Navigation("PersonelRezervasyonlar");

                    b.Navigation("RezervasyonPaketler");
                });

            modelBuilder.Entity("MadrinHotelCRM.Entities.Models.Tarife", b =>
                {
                    b.Navigation("OdaTarifeleri");
                });
#pragma warning restore 612, 618
        }
    }
}
